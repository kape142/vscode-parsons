{
	"name": "vscode-parsons",
	"displayName": "VS Code Parsons",
	"description": "",
	"version": "0.1.0",
	"engines": {
		"vscode": "^1.53.0"
	},
	"categories": [
		"Education"
	],
	"activationEvents": [
		"onCustomEditor:vscodeparsons.parsonViewer",
        "onView:parsonExplorer",
		"onCommand:vscodeparsons.fileToProblem",
		"onCommand:vscodeparsons.folderToProblem",
		"onCommand:vscodeparsons.exportFile"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"configuration": {
			"title": "VS Code Parsons",
			"properties": {
				"vscodeparsons.enableRefreshing": {
					"type": "boolean",
					"scope": "application",
					"default": false,
					"description": "Enable refreshing the Parson Explorer and Parson files for development of exercises"
				},
				"vscodeparsons.listenForChanges": {
					"type": "boolean",
					"scope": "application",
					"default": false,
					"description": "Automatically export changes to .parson files whenever a file is saved in a folder which includes a parsonconfig.json"
				}
			}
		},
		"customEditors": [
			{
				"viewType": "vscodeparsons.parsonViewer",
				"displayName": "Parson Viewer",
				"selector": [
					{
						"filenamePattern": "*.parson"
					}
				]
			}
		],
		"commands": [
			{
				"command": "vscodeparsons.fileToProblem",
				"title": "Create Parsons Problem from file"
			},
			{
				"command": "vscodeparsons.folderToProblem",
				"title": "Create Parsons Problem from folder"
			},
			{
				"command": "vscodeparsons.exportFile",
				"title": "Export Parsons Problem to file"
			},
			{
				"command": "vscodeparsons.registerGap",
				"title": "Make a gap from the currently selected text"
			},
			{
				"command": "vscodeparsons.refreshEntries",
				"title": "Refresh list of entries in the Parson Explorer",
				"icon": "$(extensions-refresh)"
			},
			{
				"command": "vscodeparsons.refreshEntry",
				"title": "Refresh the contents of this file",
				"icon": "$(extensions-refresh)"
			},
			{
				"command": "vscodeparsons.compileAndRun",
				"title": "Compile the code in this task with the given answers and run the code",
				"icon": "$(notebook-execute)"
			}
		],
		"views": {
			"explorer": [
				{
					"id": "parsonExplorer",
					"name": "Parson Explorer"
				}
			]
		},
		"menus": {
			"view/title": [
				{
					"command": "vscodeparsons.refreshEntries",
					"when": "view == parsonExplorer && config.vscodeparsons.enableRefreshing == true",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "vscodeparsons.refreshEntry",
					"when": "view == parsonExplorer && viewItem =~ /[A-z]*[eE]xercise/ && config.vscodeparsons.enableRefreshing == true",
					"group": "inline"
				},
				{
					"command": "vscodeparsons.compileAndRun",
					"when": "view == parsonExplorer && viewItem == runnableExercise",
					"group": "inline"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "webpack",
		"watch": "webpack --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"test-compile": "tsc -p ./",
		"test-watch": "tsc -watch -p ./",
		"pretest": "npm run test-compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.0.4",
		"@types/node": "^12.11.7",
		"@types/vscode": "^1.53.0",
		"@typescript-eslint/eslint-plugin": "^4.14.1",
		"@typescript-eslint/parser": "^4.14.1",
		"css-loader": "^5.1.0",
		"eslint": "^7.19.0",
		"glob": "^7.1.6",
		"highlight.js": "^10.6.0",
		"less": "^4.1.1",
		"less-loader": "^8.0.0",
		"mini-css-extract-plugin": "^1.3.9",
		"mocha": "^8.2.1",
		"ts-loader": "^8.0.14",
		"typescript": "^4.1.3",
		"vscode-test": "^1.5.0",
		"webpack": "^5.19.0",
		"webpack-cli": "^4.4.0"
	}
}
